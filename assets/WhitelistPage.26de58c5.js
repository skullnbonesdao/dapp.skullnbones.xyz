import{cN as h,dc as k,au as y,J as d,b1 as m,ak as v,as as e,bx as l,ar as f,ck as V,P as _,df as j,di as U,dj as Q,aX as C,a6 as A,b7 as B,bz as S,ai as $,a1 as P,ah as E,aj as L,cm as R,al as z}from"./index.83a77d2b.js";import{Q as K,a as J}from"./QInput.a46bd7b9.js";import{Q as M}from"./QSeparator.d6f41f82.js";import{Q as X,a as b}from"./QTabs.2d54f4b2.js";import{Q as H,a as g}from"./QTabPanels.58ff1b55.js";import{Q as Y}from"./QCard.b2c77731.js";import{Q as G}from"./QPage.a6a97328.js";import{h as W}from"./handle_confirmation.f79edca2.js";import{k as I,l as q,j as T}from"./rtl.d60794d2.js";import{Q as N}from"./QList.0405a8dd.js";import{Q as D}from"./QBtnDropdown.70164dcf.js";import{C as F}from"./ClosePopup.0fdb8bc3.js";import{Q as O}from"./QTree.b12867e1.js";import"./touch.3df10340.js";import"./QSlideTransition.8bca4d8f.js";import"./use-checkbox.9f2a4048.js";function x(){h().publicKey.value||k.create({color:"yellow",message:"Wallet not connected!",timeout:5e3})}const Z={class:"row"},ee=y({__name:"CreateWhitelist",setup(w){const s=d("");async function n(){x();const{pg_whitelist:r}=Q();let[t,c]=_.findProgramAddressSync([h().publicKey.value.toBytes(),j(s.value)],r.value.programId);try{const u=await r.value.methods.initialize(s.value).accounts({whitelist:t,systemProgram:U.programId}).rpc();console.log(u),await W(u)}catch(u){k.create({color:"red",message:`${u}`,timeout:5e3})}}return(r,t)=>(m(),v("div",Z,[e(K,{label:"New whitelist name",filled:"",class:"col",modelValue:s.value,"onUpdate:modelValue":t[0]||(t[0]=c=>s.value=c)},null,8,["modelValue"]),e(V,{disable:s.value.length==0,square:"",color:"primary",onClick:t[1]||(t[1]=c=>n())},{default:l(()=>[f("Create")]),_:1},8,["disable"])]))}}),ae={class:"row"},te=y({__name:"AddAddressToWhitelist",setup(w){const{pg_whitelist:s}=Q(),n=d(""),r=d(),t=d();C(async()=>{r.value=await s.value.account.whitelist.all()});async function c(){x();const u=new _(t.value.publicKey.toString()),[o,i]=_.findProgramAddressSync([new _(n.value).toBytes(),u.toBytes()],s.value.programId);try{const a=new _(n.value),p=await s.value.methods.addToWhitelist(a).accounts({entry:o,whitelist:u,authority:h().publicKey.value,systemProgram:U.programId}).rpc();console.log(p),await W(p)}catch(a){k.create({color:"red",message:`${a}`,timeout:5e3})}}return(u,o)=>{var i;return m(),v("div",ae,[e(D,{color:"primary",square:"",label:((i=t.value)==null?void 0:i.account.name)??"please select a whitelist"},{default:l(()=>[e(N,null,{default:l(()=>[(m(!0),v(A,null,B(r.value,a=>S((m(),$(T,{clickable:"",key:a,onClick:p=>t.value=a},{default:l(()=>[e(I,null,{default:l(()=>[e(q,null,{default:l(()=>[f(P(a==null?void 0:a.account.name),1)]),_:2},1024)]),_:2},1024)]),_:2},1032,["onClick"])),[[F]])),128))]),_:1})]),_:1},8,["label"]),e(K,{class:"col",filled:"",modelValue:n.value,"onUpdate:modelValue":o[0]||(o[0]=a=>n.value=a),label:"Address to be added"},null,8,["modelValue"]),e(V,{disable:n.value.length==0,square:"",color:"primary",onClick:o[1]||(o[1]=a=>c())},{default:l(()=>[f("Add")]),_:1},8,["disable"])])}}}),le={class:"row q-gutter-x-md"},se=y({__name:"ViewWhitelist",setup(w){const s=d(),n=d();C(async()=>{const{pg_whitelist:t}=Q();s.value=await t.value.account.whitelist.all(),n.value=await t.value.account.whitelistEntry.all()});const r=E(()=>{var t;return(t=s==null?void 0:s.value)==null?void 0:t.map(c=>{var u,o;return{label:`${c.account.name} | ${c.publicKey.toString()}`,children:(o=(u=n.value)==null?void 0:u.filter(i=>i.account.parent.toString()===c.publicKey.toString()))==null?void 0:o.flatMap(i=>({label:`Member: ${i.account.whitelisted.toString()}  |  Account: ${i.publicKey.toString()} `}))}})});return(t,c)=>(m(),v("div",le,[r.value?(m(),$(O,{key:0,nodes:r.value,"node-key":"label","selected-color":"primary","default-expand-all":""},null,8,["nodes"])):L("",!0)]))}}),oe={class:"row"},re=y({__name:"RemoveAddressFromWhitelist",setup(w){const{pg_whitelist:s}=Q(),n=d(""),r=d(),t=d();C(async()=>{r.value=await s.value.account.whitelist.all()});async function c(){x();const u=new _(t.value.publicKey),[o,i]=_.findProgramAddressSync([new _(n.value).toBytes(),u.toBytes()],s.value.programId);try{console.log(s.value.methods);const a=new _(n.value),p=await s.value.methods.removeFromWhitelist(a).accounts({entry:o,whitelist:u,authority:h().publicKey.value}).rpc();console.log(p),await W(p)}catch(a){k.create({color:"red",message:`${a}`,timeout:5e3})}}return(u,o)=>{var i;return m(),v("div",oe,[e(D,{color:"primary",square:"",label:((i=t.value)==null?void 0:i.account.name)??"please select a whitelist"},{default:l(()=>[e(N,null,{default:l(()=>[(m(!0),v(A,null,B(r.value,a=>S((m(),$(T,{clickable:"",key:a,onClick:p=>t.value=a},{default:l(()=>[e(I,null,{default:l(()=>[e(q,null,{default:l(()=>[f(P(a==null?void 0:a.account.name),1)]),_:2},1024)]),_:2},1024)]),_:2},1032,["onClick"])),[[F]])),128))]),_:1})]),_:1},8,["label"]),e(K,{class:"col",filled:"",modelValue:n.value,"onUpdate:modelValue":o[0]||(o[0]=a=>n.value=a),label:"Address to be removed"},null,8,["modelValue"]),e(V,{disable:n.value.length==0,square:"",color:"primary",onClick:o[1]||(o[1]=a=>c())},{default:l(()=>[f("Remove")]),_:1},8,["disable"])])}}}),ne={class:"row"},ue=y({__name:"DeleteWhitelist",setup(w){const{pg_whitelist:s}=Q(),n=d("3x5vrFFTspsicxrYHMA8SNVW71RMhVkALemXrJFfeQo1"),r=d(),t=d();C(async()=>{r.value=await s.value.account.whitelist.all()});async function c(){x();const u=new _(t.value.publicKey);_.findProgramAddressSync([new _(n.value).toBytes(),u.toBytes()],s.value.programId);try{const o=await s.value.methods.deleteWhitelist(t.value.account.name).accounts({whitelist:u,authority:h().publicKey.value}).rpc();console.log(o),await W(o)}catch(o){k.create({color:"red",message:`${o}`,timeout:5e3})}}return(u,o)=>{var i;return m(),v("div",ne,[e(D,{square:"",color:"primary",label:((i=t.value)==null?void 0:i.account.name)??"please select a whitelist"},{default:l(()=>[e(N,null,{default:l(()=>[(m(!0),v(A,null,B(r.value,a=>S((m(),$(T,{clickable:"",key:a,onClick:p=>t.value=a},{default:l(()=>[e(I,null,{default:l(()=>[e(q,null,{default:l(()=>[f(P(a==null?void 0:a.account.name),1)]),_:2},1024)]),_:2},1024)]),_:2},1032,["onClick"])),[[F]])),128))]),_:1})]),_:1},8,["label"]),e(V,{square:"",color:"primary",onClick:o[0]||(o[0]=a=>c())},{default:l(()=>[f("Delete")]),_:1})])}}}),ie=z("div",{class:"col text-h6"},"Whitelists Manager",-1),Ce=y({__name:"WhitelistPage",setup(w){const s=d("view");return(n,r)=>(m(),$(G,{class:"bg-black"},{default:l(()=>[e(Y,{flat:""},{default:l(()=>[e(J,{class:"row items-center q-gutter-x-md"},{default:l(()=>[e(R,{name:"contrast",size:"md"}),ie]),_:1}),e(M),e(X,{"no-caps":"","outside-arrows":"","mobile-arrows":"",modelValue:s.value,"onUpdate:modelValue":r[0]||(r[0]=t=>s.value=t),class:"shadow-2 bg-dark",align:"justify"},{default:l(()=>[e(b,{name:"create",label:"Create Whitelist"}),e(b,{name:"add",label:"Add Address to Whitelist"}),e(b,{name:"remove",label:"Remove address from Whitelist"}),e(b,{name:"delete",label:"Delete Whitelist"}),e(b,{name:"view",label:"View "})]),_:1},8,["modelValue"]),e(M),e(H,{dark:"",modelValue:s.value,"onUpdate:modelValue":r[1]||(r[1]=t=>s.value=t),animated:""},{default:l(()=>[e(g,{name:"create"},{default:l(()=>[e(ee)]),_:1}),e(g,{name:"add"},{default:l(()=>[e(te)]),_:1}),e(g,{name:"remove"},{default:l(()=>[e(re)]),_:1}),e(g,{name:"delete"},{default:l(()=>[e(ue)]),_:1}),e(g,{name:"view"},{default:l(()=>[e(se)]),_:1})]),_:1},8,["modelValue"])]),_:1})]),_:1}))}});export{Ce as default};
