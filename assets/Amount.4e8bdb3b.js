import{d0 as d}from"./index.4796aa65.js";function o(r,e,s){return e=y(e),e in r?Object.defineProperty(r,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):r[e]=s,r}function h(r,e){if(typeof r!="object"||r===null)return r;var s=r[Symbol.toPrimitive];if(s!==void 0){var t=s.call(r,e||"default");if(typeof t!="object")return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function y(r){var e=h(r,"string");return typeof e=="symbol"?e:String(e)}class g extends Error{constructor(e,s,t,a){super(e),o(this,"name","MetaplexError"),this.source=s,this.sourceDetails=t,this.cause=a,this.message=this.message+`

Source: ${this.getFullSource()}`+(this.cause?`

Caused By: ${this.cause}`:"")+`
`}getCapitalizedSource(){return this.source==="sdk"||this.source==="rpc"?this.source.toUpperCase():this.source[0].toUpperCase()+this.source.slice(1)}getFullSource(){const e=this.getCapitalizedSource(),s=this.sourceDetails?` > ${this.sourceDetails}`:"";return e+s}toString(){return`[${this.name}] ${this.message}`}}class n extends g{constructor(e,s){super(e,"sdk",void 0,s),o(this,"name","SdkError")}}class S extends n{constructor(e){const s=`No operation handler was registered for the [${e}] operation. Did you forget to register it? You may do this by using: "metaplex.operations().register(operation, operationHandler)".`;super(s),o(this,"name","OperationHandlerMissingError")}}class x extends n{constructor(e){const s=`The SDK tried to access the driver [${e}] but was not provided. Make sure the driver is registered by using the "setDriver(myDriver)" method.`;super(s),o(this,"name","DriverNotProvidedError")}}class b extends n{constructor(e,s){const t=`Expected currency [${s}] but got [${e}]. Ensure the provided Amount or Currency is of the expected type.`;super(t),o(this,"name","UnexpectedCurrencyError"),this.actual=e,this.expected=s}}class E extends n{constructor(e,s,t){const i=`The SDK tried to execute an operation${t?` [${t}]`:""} on two different currencies: ${e.symbol} and ${s.symbol}. Provide both amounts in the same currency to perform this operation.`;super(i),o(this,"name","CurrencyMismatchError"),this.left=e,this.right=s,this.operation=t}}class $ extends n{constructor(e){super("The provided JSON variable could not be parsed into a string.",e),o(this,"name","InvalidJsonVariableError")}}class w extends n{constructor(e){super("The provided string could not be parsed into a JSON variable.",e),o(this,"name","InvalidJsonStringError")}}class P extends n{constructor(e){const s=`Trying to access the [${e}] operation as a guest. Ensure your wallet is connected using the identity driver. For instance, by using "metaplex.use(walletAdapterIdentity(wallet))" or "metaplex.use(keypairIdentity(keypair))".`;super(s),o(this,"name","OperationUnauthorizedForGuestsError")}}class N extends n{constructor(e,s,t){const a=(s?`The account of type [${s}] was not found`:"No account was found")+` at the provided address [${e.toString()}].`+(t?` ${t}`:"");super(a),o(this,"name","AccountNotFoundError")}}class D extends n{constructor(e,s,t){const a=`The account at the provided address [${e.toString()}] is not of the expected type [${s}].`;super(a,t),o(this,"name","UnexpectedAccountError")}}class T extends n{constructor(e,s,t){const a=`Expected variable [${e}] to be of type [Signer] but got [${s}]. `+(t??"Please check that you are providing the variable as a signer. Note that, it may be allowed to provide a non-signer variable for certain use cases but not this one.");super(a),o(this,"name","ExpectedSignerError")}}class C extends n{constructor(e,s){const t=typeof e=="string",a=t?e:e.toString(),i=`The provided program ${t?"name":"address"} [${a}] is not recognized in the [${s}] cluster.Did you forget to register this program? If so, you may use "metaplex.programs().register(myProgram)" to fix this.`;super(i),o(this,"name","ProgramNotRecognizedError"),this.nameOrAddress=e,this.cluster=s}}class z extends n{constructor(e,s){const t=`The input provided to the [${e}] resulted in a Transaction containing no Instructions. `+(s??"Ensure that the provided input has an effect on the operation. This typically happens when trying to update an account with the same data it already contains.");super(t),o(this,"name","NoInstructionsToSendError")}}class I extends n{constructor(e,s){const t=`The received data could not be serialized as a [${e}].`;super(t,s),o(this,"name","FailedToSerializeDataError")}}class k extends n{constructor(e,s){const t=`The received serialized data could not be deserialized to a [${e}].`;super(t,s),o(this,"name","FailedToDeserializeDataError")}}class F extends n{constructor(e,s){const t=`Some parameters are missing from the provided input object. Please provide the following missing parameters [${e.join(", ")}].`+(s?` ${s}`:"");super(t),o(this,"name","MissingInputDataError")}}class M extends n{constructor(){const e="This feature is not yet implemented. Please check back later.";super(e),o(this,"name","NotYetImplementedError")}}class O extends n{constructor(e){const s=`A switch statement is not handling the provided case [${e}]. Check your inputs or raise an issue to have ensure all cases are handled properly.`;super(s),o(this,"name","UnreachableCaseError")}}const c=(r,e)=>new d(r,e),U=r=>r===null?null:c(r),p={symbol:"SOL",decimals:9},u=(r,e)=>({basisPoints:c(r),currency:e}),A=r=>u(r,p),J=(r,e=0,s="Token")=>(typeof r!="number"&&(r=c(r).toNumber()),{basisPoints:c(r*Math.pow(10,e)),currency:{symbol:s,decimals:e,namespace:"spl-token"}}),m=(r,e)=>("currency"in r&&(r=r.currency),"currency"in e&&(e=e.currency),r.symbol===e.symbol&&r.decimals===e.decimals&&r.namespace===e.namespace);function f(r,e){if("currency"in r&&(r=r.currency),!m(r,e))throw new b(r,e)}function B(r){f(r,p)}function l(r,e,s){if("currency"in r&&(r=r.currency),"currency"in e&&(e=e.currency),!m(r,e))throw new E(r,e,s)}const _=(r,e)=>(l(r,e,"add"),u(r.basisPoints.add(e.basisPoints),r.currency)),j=(r,e)=>(l(r,e,"subtract"),u(r.basisPoints.sub(e.basisPoints),r.currency)),H=(r,e)=>u(r.basisPoints.muln(e),r.currency),K=r=>{if(r.currency.decimals===0)return`${r.currency.symbol} ${r.basisPoints.toString()}`;const e=new d(10).pow(new d(r.currency.decimals)),s=r.basisPoints,{div:t,mod:a}=s.divmod(e),i=`${t.toString()}.${a.abs().toString(10,r.currency.decimals)}`;return`${r.currency.symbol} ${i}`};export{N as A,x as D,T as E,I as F,$ as I,g as M,M as N,S as O,C as P,p as S,D as U,o as _,u as a,w as b,B as c,_ as d,P as e,J as f,k as g,U as h,O as i,z as j,l as k,A as l,H as m,F as n,K as o,j as s,c as t};
